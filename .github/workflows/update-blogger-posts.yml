name: Get Blogger Posts Robust
on: workflow_dispatch

jobs:
  get-posts:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - run: mkdir -p data
    
    - name: Get data
      run: |
        # Obtener datos
        curl -s "https://www.googleapis.com/blogger/v3/blogs/$BLOG_ID/posts?key=$API_KEY&maxResults=10" \
          -o data/raw.json || echo '{"items":[]}' > data/raw.json
        
        # Procesar de forma EXTRA segura
        if [ -s "data/raw.json" ]; then
          # Intentar procesar con jq, si falla crear vac√≠o
          jq '{
            last_updated: (now | strftime("%Y-%m-%dT%H:%M:%SZ")),
            posts: [.items[]? | {
              title: (.title // "Sin t√≠tulo"),
              url: (.url // ""),
              categories: (.labels // []),
              published: (.published // "")
            }]
          }' data/raw.json > data/blog-posts.json 2>/dev/null || \
          echo '{"last_updated":"'$(date -Is)'","posts":[]}' > data/blog-posts.json
        else
          echo '{"last_updated":"'$(date -Is)'","posts":[]}' > data/blog-posts.json
        fi
        
        echo "‚úÖ JSON creado"

    - name: Commit
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add data/blog-posts.json
        git commit -m "üìù Posts updated" || exit 0
        git push
      env:
        API_KEY: ${{ secrets.BLOGGER_API_KEY }}
        BLOG_ID: ${{ vars.BLOGGER_BLOG_ID }}
