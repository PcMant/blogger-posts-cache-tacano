name: Get Blogger Posts Simple
on:
  workflow_dispatch:

jobs:
  get-blogger-posts:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Create data directory
      run: mkdir -p data

    - name: Get Blogger data
      run: |
        echo "üì¶ Obteniendo datos de Blogger..."
        URL="https://www.googleapis.com/blogger/v3/blogs/$BLOG_ID/posts?key=$API_KEY&maxResults=20"
        
        # Hacer petici√≥n y guardar en variable
        RESPONSE=$(curl -s "$URL")
        echo "‚úÖ Datos obtenidos"

    - name: Process and save JSON
      run: |
        echo "üõ†Ô∏è Procesando datos..."
        
        # Crear JSON directamente con los datos que quieres
        JSON_DATA=$(echo '$RESPONSE' | jq '{
          last_updated: (now | strftime("%Y-%m-%dT%H:%M:%SZ")),
          posts: [.items[]? | {
            title: .title,
            url: .url,
            image: (.content | match("<img[^>]+src=\"([^\">]+)\"") | .captures[0].string? // null),
            categories: (.labels // []),
            published: .published,
            updated: .updated
          }]
        }')
        
        # Guardar en archivo
        echo "$JSON_DATA" > data/blog-posts.json
        echo "‚úÖ JSON guardado en data/blog-posts.json"

    - name: Show result
      run: |
        echo "üéØ Resultado:"
        echo "Posts obtenidos: $(jq '.posts | length' data/blog-posts.json)"
        jq '.' data/blog-posts.json

    - name: Commit and push
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add data/blog-posts.json
        git commit -m "üìù Blog posts updated - $(date +'%Y-%m-%d %H:%M')"
        git push
      env:
        API_KEY: ${{ secrets.BLOGGER_API_KEY }}
        BLOG_ID: ${{ vars.BLOGGER_BLOG_ID }}
        RESPONSE: ${{ steps.get-blogger-data.outputs.response }}
