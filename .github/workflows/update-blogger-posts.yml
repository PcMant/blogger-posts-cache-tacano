name: Get Blogger Posts MANUAL
on:
  workflow_dispatch:

jobs:
  get-posts:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - run: mkdir -p data
    
    - name: Get data and process MANUALLY
      run: |
        # Obtener datos
        curl -s "https://www.googleapis.com/blogger/v3/blogs/$BLOG_ID/posts?key=$API_KEY&maxResults=10" \
          -o data/raw.json
        
        # VER qu√© tenemos realmente
        echo "üîç ¬øQu√© hay en la respuesta?"
        jq '.' data/raw.json | head -30
        
        # Crear JSON manualmente PASO A PASO
        echo "üõ†Ô∏è Creando JSON manualmente..."
        
        # 1. Crear array vac√≠o
        echo '[]' > data/temp_array.json
        
        # 2. Procesar CADA item manualmente
        ITEM_COUNT=$(jq '.items | length' data/raw.json)
        echo "Encontrados $ITEM_COUNT items"
        
        for i in $(seq 0 $(($ITEM_COUNT - 1))); do
          TITLE=$(jq -r ".items[$i].title" data/raw.json)
          URL=$(jq -r ".items[$i].url" data/raw.json)
          LABELS=$(jq -r ".items[$i].labels // []" data/raw.json)
          PUBLISHED=$(jq -r ".items[$i].published" data/raw.json)
          
          echo "Procesando: $TITLE"
          
          # Agregar al array
          jq --arg title "$TITLE" \
             --arg url "$URL" \
             --argjson labels "$LABELS" \
             --arg published "$PUBLISHED" \
            '. += [{
              title: $title,
              url: $url,
              categories: $labels,
              published: $published
            }]' data/temp_array.json > data/temp_updated.json
          mv data/temp_updated.json data/temp_array.json
        done
        
        # 3. Crear JSON final
        echo '{"last_updated": "'$(date -Is)'"}' > data/temp_time.json
        jq --argjson posts "$(cat data/temp_array.json)" '.posts = $posts' data/temp_time.json > data/blog-posts.json
        
        echo "‚úÖ JSON creado manualmente"
        echo "Posts: $(jq '.posts | length' data/blog-posts.json)"

    - name: Commit
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add data/blog-posts.json
        git commit -m "üìù Posts manual process"
        git push
      env:
        API_KEY: ${{ secrets.BLOGGER_API_KEY }}
        BLOG_ID: ${{ vars.BLOGGER_BLOG_ID }}
