name: Get Blogger Posts
on:
  workflow_dispatch:

jobs:
  get-blogger-posts:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Create data directory
      run: mkdir -p data

    - name: Get RAW Blogger data
      run: |
        echo "üì¶ Obteniendo datos RAW..."
        curl -s "https://www.googleapis.com/blogger/v3/blogs/$BLOG_ID/posts?key=$API_KEY&maxResults=20" \
          -o data/RAW_BLOGGER_DATA.json
        echo "‚úÖ RAW data guardado"

    - name: DEBUG - See what we REALLY got
      run: |
        echo "üîç DEBUG: ¬øQu√© recibimos REALMENTE?"
        echo "Tama√±o del archivo: $(wc -c < data/RAW_BLOGGER_DATA.json) bytes"
        echo "--- PRIMERAS 10 L√çNEAS ---"
        head -10 data/RAW_BLOGGER_DATA.json
        echo "--- ¬øTIENE ITEMS? ---"
        jq 'has("items")' data/RAW_BLOGGER_DATA.json
        echo "--- N√öMERO DE ITEMS ---"
        jq '.items | length' data/RAW_BLOGGER_DATA.json
        echo "--- PRIMER ITEM ---"
        jq '.items[0]' data/RAW_BLOGGER_DATA.json

    - name: Process data THE RIGHT WAY
      run: |
        echo "üõ†Ô∏è Procesando datos CORRECTAMENTE..."
        
        # M√©todo INFALIBLE
        if jq -e '.items' data/RAW_BLOGGER_DATA.json > /dev/null; then
          echo "üéØ EXTRAYENDO ITEMS..."
          
          # Paso 1: Extraer solo los campos que queremos
          jq '.items[] | {
            title: .title,
            url: .url, 
            categories: (.labels // []),
            published: .published,
            updated: .updated
          }' data/RAW_BLOGGER_DATA.json > data/TEMP_ITEMS.json
          
          # Paso 2: Convertir a array
          jq -s '{posts: .}' data/TEMP_ITEMS.json > data/TEMP_POSTS.json
          
          # Paso 3: Agregar timestamp
          echo '{"last_updated": "'$(date -Is)'"}' > data/TEMP_TIME.json
          
          # Paso 4: Combinar TODO
          jq -s '.[0] * .[1]' data/TEMP_TIME.json data/TEMP_POSTS.json > data/blog-posts.json
          
          # Limpiar
          rm data/TEMP_*.json
          
          echo "‚úÖ JSON creado CORRECTAMENTE"
        else
          echo "‚ùå NO HAY ITEMS en la respuesta"
          echo '{"last_updated": "'$(date -Is)'", "posts": []}' > data/blog-posts.json
        fi

    - name: Verify final result
      run: |
        echo "üéØ RESULTADO FINAL:"
        echo "Posts en JSON final: $(jq '.posts | length' data/blog-posts.json)"
        jq '.' data/blog-posts.json

    - name: Commit and push
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add data/blog-posts.json
        git commit -m "üìù Blog posts updated - $(date +'%Y-%m-%d %H:%M')"
        git push
      env:
        API_KEY: ${{ secrets.BLOGGER_API_KEY }}
        BLOG_ID: ${{ vars.BLOGGER_BLOG_ID }}
